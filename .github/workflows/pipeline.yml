name: .NET Core

#triggers
on:
  push:
    branches: [master]
env:
  PROJECT: animal-adoption-portal
  DEVAPPNAME: overbreeze

jobs:
  build:
    
    #build agent
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2 # get the code from our repo
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
        source-url: https://nuget.pkg.github.com/Team-Carabao/index.json
      env: 
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

    - name: Install dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release --no-restore
#     - name: Test
#       run: dotnet test --no-restore --verbosity normal

    - name: Publish Portal
      run: dotnet publish ./AnimalAdoption.Web.Portal --configuration Release --no-restore -o ./portal
    
    - name: Pack
      run: dotnet pack ./AnimalAdoption.Common.Logic --configuration Release 
    
    - name: Push Package to NuGet
      run: dotnet nuget push ./AnimalAdoption.Common.Logic/**/*.nupkg --skip-duplicate
    
    - name: List out directory contents
      run: |
          echo ${{ env.PROJECT }}
          echo "hello world"
          echo "Listing the contents of the GitHub workspace directory"
          ls ${{ github.workspace }}
          echo "Listing Portal directory"
          ls ./portal

          echo "Recursively listing all contents of the current directory"
          ls -R
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.1.4
      with:
        # Artifact name
        name: portal
        # A file, directory or wildcard pattern that describes what to upload
        path: ./portal
        # The desired behavior if no files are found using the provided path.
        if-no-files-found: error
        
  release:
    needs: build
    #build agent
    runs-on: ubuntu-latest

    steps:
    - name: Azure Login
      uses: Azure/login@v1
      with:
        # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
        creds: ${{secrets.DEVAPPSERVICE}} 
        # Set this value to true to enable Azure PowerShell Login in addition to Az CLI login
        # enable-AzPSSession: # optional     
    
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.5
      with:
        # Artifact name
        name: portal
        # Destination path
        path: ./release
    
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        # Name of the Azure Web App
        app-name: ${{env.devappname}}
        # Applies to Web Apps(Windows and Linux) and Web App Containers(linux). Multi container scenario not supported. Publish profile (*.publishsettings) file contents with Web Deploy secrets
#         publish-profile: ${{ secrets.OVERBREEZEPUBLISHPROFILE }}
        # Enter an existing Slot other than the Production slot
        #slot-name: # optional, default is production
        # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
        package: ./release
        # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
        #images: 
        # Applies to Web App Containers only: Path of the Docker-Compose file. Should be a fully qualified path or relative to the default working directory. Required for multi-container scenario
        #configuration-file: # optional
        # Enter the start up command. For ex. dotnet run or dotnet run
        #startup-command: # optional
            #test
            
    - name: Azure App Service Settings
      uses: Azure/appservice-settings@v1
      with:
        # Name of the Azure Web App
        app-name: ${{env.devappname}}
        # Name of an existing slot other than the production slot. Default value is production
#         slot-name: # optional
# test
        # Application settings using the JSON syntax set as value of secret variable: APP_SETTINGS
        app-settings-json: |
          [
            {
              "name": "ANCM_ADDITIONAL_ERROR_PAGE_LINK",
              "value": "https://overbreeze.scm.azurewebsites.net/detectors?type=tools&name=eventviewer",
              "slotSetting": false
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "${{secrets.DEVAPPINSIGHTKEY}}",
              "slotSetting": false
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "InstrumentationKey=${{secrets.DEVAPPINSIGHTKEY}};IngestionEndpoint=https://eastasia-0.in.applicationinsights.azure.com/",
              "slotSetting": false
            },
            {
              "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
              "value": "~2",
              "slotSetting": false
            },
            {
              "name": "GlobalPassword",
              "value": "${{secrets.GLOBALPASSWORD}}",
              "slotSetting": false
            },
            {
              "name": "XDT_MicrosoftApplicationInsights_Mode",
              "value": "default",
              "slotSetting": false
            }
            ]
#         # Connection Strings using the JSON syntax set as value of secret variable: CONNECTION_STRINGS
#         connection-strings-json: # optional
#         # General configuration settings using dictionary syntax - Key Value pairs
#         general-settings-json: # optional :  

